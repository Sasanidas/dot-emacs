* Введение

В этом репозитории находится моя конфигурация редактора [[https://www.gnu.org/software/emacs/][Emacs]].

Редактор Emacs - это главный инструмет моей профессиональной
деятельности, которая в первую очередь включает в себя разработку
программного обеспечения и всё, что с этим связано - исследование,
администрирование, тестирование, отладка, написание документации и
т.п.

* Установка

Для установки Emacs и его конфигурации, пользователи Ubuntu могут
воспользоваться следующей командой:

#+BEGIN_SRC sh
  wget https://raw.github.com/snosov1/bash/master/setup-ubuntu.bash -O /tmp/setup-ubuntu.bash && bash /tmp/setup-ubuntu.bash
#+END_SRC

Во время её выполнения устанавливается сам Emacs, клонируется этот
репозиторий и в домашнюю директорию добавляются символьные ссылки на
файлы из репозитория.

Пользователи других ОС могут проделать эти шаги в ручную. Вместо
создания символьных ссылок, файлы можно просто скопировать в домашнюю
директорию.

Для запуска нужно в терминале выполнить команду =emacs=, либо
воспользоваться любым другим способом, предоставляемым операционной
системой.

* Предисловие

Если ты установил Emacs и эту конфигурацию - ты уже на пути к личному
успеху. Теперь ты можешь делать в нём ВСЁ, ЧТО УГОДНО! Во истину,
захватывающие возможности - но не исключено, что кому-то интересен
более конкретный ответ на вопрос "Куды бечь и что делать?".

Как раз для таких людей написан этот небольшой обзор. Возможно, ты
вообще никогда ничего не программировал в своей жизни и при работе с
компьютером ограничивался браузером и меню компьютерных игр, а теперь
тебе захотелось написать свою собственную игру или сайт. Возможно, ты
что-то программировал в школе или университете, глядя в голубой экран
с текстом на языке Паскаль и в твоих висках застучали воспоминания и
огнём вспыхнули дерзкие мысли. Возможно, ты программировал на C# в
Visual Studio под Windows и в поисках настоящей жизни решил установить
Linux, но не ушел дальше рабочего стола.

Во всех этих случаях, а также, если ты обычный
программист/администратор/журналист/.../, который вдруг осознал, что
редактирование текста - это первейшая задача для тех, кто так или
иначе работает за компьютером и тебе непонятно, почему нужно ставить
10 программ, в каждой из которых свой (разной степени убогости)
текстовый редактор, непонятно, почему ты должен к ним привыкать,
воевать с ними и вообще пользоваться ими, то ты зашел по адресу.

Как уже было сказано - редактирование текста - это первейшая задача
при работе за компьютером и было бы странно, если бы она до сих пор не
была решена. К счастью, её решили давно и окончательно - созданием
Emacs.

Список того, что требуется от читателя, совсем небольшой, но очень
важный:

- Слепая печать

  Ты должен научиться печатать вслепую. Переоценить важность этого
  навыка невозможно. Если у тебя его нет - прямо сейчас прекращай
  чтение и возвращайся, когда обретешь его. Самый простой способ -
  прохождение курса [[http://ergosolo.ru/]["Соло на клавиатуре"]]. Первым делом нужно пройти
  английский курс, после этого, по желанию - русский. Повторяю, если
  ты не умеешь печатать вслепую - переходи по ссылке и начинай
  обучение. Прямо сейчас.

  Этот параграф читать должны уже только те, кто умеет печатать
  вслепую, и если это про тебя - то смело переходи к следующему
  пункту. Если же ты продолжил читать, к своему стыду не умея печатать
  вслепую, то у меня есть ещё несколько слов.

  Главный аргумент, почему люди не учатся печатать вслепую - "у меня и
  так всё нормально".

  Этот аргумент легко отбивается - "ничего у тебя не нормально". Дело
  в том, что когда говорят о слепой печати - в первую очередь говорят
  о скорости набора. Со стороны - это самый заметный и интересный
  аспект, но с практической точки зрения он интересен разве только
  стенографисткам. Например, средний программист в день набирает 100
  (сто) строк кода. Скорость, с которой он их наберет даже тыкая двумя
  пальцами по клавиатуре - очень небольшой процент 8ми-часового
  рабочего дня.

  Происходит это потому, что программист гораздо больше думает о том,
  что нужно написать, чем непосредственно пишет. То же самое можно
  сказать и о писателях. Человек не может сочинять текст на скорости
  300 символов в минуту. Нужно подбирать слова, перечитывать
  написанное, переставлять абзацы и предложения - именно это занимает
  большую часть времени.

  В этом разрезе, при слепой печати намного важнее то, что человек
  перестает думать о том, *КАК* он печатает и у него освобождается
  больше время для размышлений о том, *ЧТО* нужно напечатать.

  Представь, что ты вынужден был бы думать о том, когда делать вдохи и
  выдохи - с большими шансами ты не смог бы думать вообще ни о чем
  другом, потому что постоянно был бы занят мыслями о том, как бы не
  задохнуться.


** Что такое C-, M- и всё остальное.
** обязательно перебиндить капс-лок
** обязательно слепая печать
** обязательно переключать на шифт-шифт
* Как отредактировать файл
** dired (картинки)
** ido
** C-x C-s, C-x C-c, C-x k
** переключение языка
** перемещение (C-a, C-e, M->, M-<, C-M-n, C-M-p, M-g g)
** посимвольные операции (не забыть C-t)
** пословные операции (subword) (важно - что C-M-b, C-M-f бегают по скобкам)
** M-z
** Undo
** C-x C-o, M-\
** M-p, M-n
** M-c, M-u, M-l
** C-o, M-j
** выделение региона (С-x h)
** kill/yank, kill-ring
** Парные скобочки, удаление
** C-=
** C-s, C-r (не забыть, что можно выделить и нажать и оно его будет искать), M-s o, M-% (C-q C-j)
** C-v, M-v, C-l
** Контекстное авто-дополнение

* Работа с окошками
* Поиск
* Как поставить dmd
** M-&
** пишем программу - комментарии, M-q
** компилируем
** создаем репозиторий, смотрим в магит
** выкладываем на гитхаб
** Таги
* Пишем презентацию в орг-моде, в маркдауне (починить нумерованый список)
* Разное
** пользование документацией
** Редактирование под рутом
** grep, wgrep
** M-|
** редактирование в диред
** клавиатурные макросы
** несколько курсоров (rectangular regions)
** remote-term
** проверка правописания
** Выполнение лиспа
** Google, Lingvo
