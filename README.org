* Введение

В этом репозитории находится моя конфигурация редактора [[https://www.gnu.org/software/emacs/][Emacs]].

Редактор Emacs - это главный инструмет моей профессиональной
деятельности, которая в первую очередь включает в себя разработку
программного обеспечения и всё, что с этим связано - исследование,
администрирование, тестирование, отладка, написание документации и
т.п.

* Установка

Для установки Emacs и его конфигурации, пользователи Ubuntu могут
воспользоваться следующей командой:

#+BEGIN_SRC sh
  wget https://raw.github.com/snosov1/bash/master/setup-ubuntu.bash -O /tmp/setup-ubuntu.bash && bash /tmp/setup-ubuntu.bash
#+END_SRC

Во время её выполнения устанавливается сам Emacs, клонируется этот
репозиторий и в домашнюю директорию добавляются символьные ссылки на
файлы из репозитория.

Пользователи других ОС могут проделать эти шаги в ручную. Вместо
создания символьных ссылок, файлы можно просто скопировать в домашнюю
директорию.

Для запуска нужно в терминале выполнить команду =emacs=, либо
воспользоваться любым другим способом, предоставляемым операционной
системой.

* Предисловие

Если ты установил Emacs и эту конфигурацию - ты уже на пути к личному
успеху. Теперь ты можешь делать в нём ВСЁ, ЧТО УГОДНО! Во истину,
захватывающие возможности - но не исключено, что кому-то интересен
более конкретный ответ на вопрос "Куды бечь и что делать?".

Как раз для таких людей написан этот небольшой обзор. Возможно, ты
вообще никогда ничего не программировал в своей жизни и при работе с
компьютером ограничивался браузером и меню компьютерных игр, а теперь
тебе захотелось написать свою собственную игру или сайт. Возможно, ты
что-то программировал в школе или университете, глядя в голубой экран
с текстом на языке Паскаль и в твоих висках застучали воспоминания и
огнём вспыхнули дерзкие мысли. Возможно, ты программировал на C# в
Visual Studio под Windows и в поисках настоящей жизни решил установить
Linux, но не ушел дальше рабочего стола.

Во всех этих случаях, а также, если ты обычный
программист/администратор/журналист/.../, который вдруг осознал, что
редактирование текста - это первейшая задача для тех, кто так или
иначе работает за компьютером и тебе непонятно, почему нужно ставить
10 программ, в каждой из которых свой (разной степени убогости)
текстовый редактор, непонятно, почему ты должен к ним привыкать,
воевать с ними и вообще пользоваться ими, то ты зашел по адресу.

Как уже было сказано - редактирование текста - это первейшая задача
при работе за компьютером и было бы странно, если бы она до сих пор не
была решена. К счастью, её решили давно и окончательно - созданием
Emacs.

Список того, что требуется от читателя, совсем небольшой, но очень
важный:

- Слепая печать

  Ты должен научиться печатать вслепую. Переоценить важность этого
  навыка невозможно. Если у тебя его нет - прямо сейчас прекращай
  чтение и возвращайся, когда обретешь его. Самый простой способ -
  прохождение курса [[http://ergosolo.ru/]["Соло на клавиатуре"]]. Первым делом нужно пройти
  английский курс, после этого, по желанию - русский. Повторяю, если
  ты не умеешь печатать вслепую - переходи по ссылке и начинай
  обучение. Прямо сейчас.

  Этот параграф читать должны уже только те, кто умеет печатать
  вслепую, и если это про тебя - то смело переходи к следующему
  пункту. Если же ты продолжил читать, но, к своему стыду, не умеешь
  печатать вслепую, то у меня есть ещё несколько слов.

  Главный аргумент, почему люди не учатся печатать вслепую - "у меня и
  так всё нормально".

  Этот аргумент легко отбивается - "ничего у тебя не нормально". Когда
  говорят о слепой печати - в первую очередь говорят о скорости
  набора. Со стороны - это самый заметный и интересный аспект, но с
  практической точки зрения он интересен разве только
  стенографисткам. Средний программист, к примеру, в день набирает
  около 100 (ста) строк кода. Скорость, с которой он их наберет даже
  тыкая двумя пальцами по клавиатуре - всего лишь небольшая толика
  8ми-часового рабочего дня.

  Происходит это потому, что программист, как правило, гораздо больше
  думает о том, что нужно написать, чем непосредственно пишет. То же
  самое можно сказать и о писателях. Человек не может сочинять текст
  на скорости 300 символов в минуту. Нужно подбирать слова,
  перечитывать написанное, переставлять абзацы и предложения - именно
  это занимает большую часть времени.

  Поэтому в навыке слепой печати намного важнее то, что человек
  перестает думать о том, *КАК* он печатает и у него освобождается
  время для обдумывания того, *ЧТО* нужно напечатать.

  Представь, что ты вынужден был бы думать о том, как и когда делать
  вдохи и выдохи - с большими шансами ты не смог бы думать больше ни о
  чем другом, а думал только как бы не задохнуться.

  Точно также человек отвлекается при печати двумя пальцами - ему
  нужно перевести взгляд с монитора на клавиатуру, а потом обратно,
  ему нужно найти нужные буквы на клавиатуре, в результате фраза
  "Добрый день" в голове превращается в "Lj,hs-блин, язык не
  переключил,del,del,del,del,del-Д-о-б-р-ы-ы-ы-где-ы?-ы-й
  д-е-н-ь!". И к тому времени, как человек её набрал он уже забыл, что
  хотел написать в письме.

  Таким образом, главный плюс слепой печати - среди прочих неоспоримых
  и важных преимуществ - заключается в том, что печать для тебя
  становится навыком, записанным на подкорке мозга - ты просто
  перестаешь о нем думать - как о ходьбе, дыхании и проч.

  Второй аргумент, почему люди не учатся печатать вслепую - "у меня
  нет времени на обучение".

  Этот аргумент ещё мощнее первого. "Вслепую я печатаю в три раза
  медленее, сбиваюсь и забываю клавиши, а мне нужно срочно писать
  курсовую/диплом/работу/.../".

  Прохождение курса "Соло на клавиатуре" в среднем занимает у человека
  40 (сорок) часов работы за клавиатурой (всё время занимает не
  намного больше). Наверное, в твоей жизни что-то не так, если для
  обретения навыка, который качественно улучшит твою профессиональную
  деятельность до конца жизни у тебя нет сорока часов. 40 часов - это
  один месяц по 2 часа в день, неделя - по 6 часов в день. Сколько
  времени ты посвящаешь чтению новостей, просмотру YouTube,
  прослушиванию музыки и т.п.?

  Да и вообще, представь, что тебе полгода и ты научился ползать по
  квартире. В год родители тебя заставляют ходить - а ты им
  объясняешь, что можешь доползти куда хочешь и тебе непонятно, зачем
  нужно ходить - перемещаешься ты гораздо медленее, постоянно
  падаешь. И где бы ты был, если бы в 20 лет по-прежнему ползал и не
  умел ходить?

  Третий аргумент. Многим кажется, что овладеть этим навыком очень
  сложно. Действительно, задуматься только - надо же запомнить порядка
  30 клавиш, а если печатать на 2х языках - то порядка 70. Их все
  нужно ПОСТОЯННО ПОМНИТЬ.

  Главный секрет здесь - думать надо меньше. Я не зря всё время
  провожу аналогии с ходьбой, дыханием и подобными действиями - все
  они управляются не сознанием, а подсознанием. В процессе обучения -
  ты действительно будешь задумываться где расположена какая-то
  клавиша. Но этот процесс очень быстро запишется под корку головного
  мозга и не будет требовать вообще никаких умственных усилий. Вообще
  никаких.

  Кроме того, это ещё и положительно сказывается на количестве
  ошибок. В моем детстве был мультфильм про сороконожку, которую
  спросили, как она управляется со своими сорока ногами, она ничего
  толком не ответила и ушла, но задумалась. И когда она стала думать,
  как ей шагать - ноги у неё стали заплетаться и она постоянно падала,
  а когда она отвлеклась, то спокойно пошла, как раньше.

  Итак, надеюсь, я убедил тебя научиться печатать вслепую. Если после
  всех моих стараний ты всё-таки решишь продолжить без этого навыка,
  или если ты решил начать занятия параллельно чтению этого обзора, то
  хотя бы положи руки на клавиатуру правильно и старайся жать кнопки
  правильными пальцами.

  После того, как я прошел курс обучения на английском языке,
  по-русски я всё ещё печатал глядя на клавиатуру. Но я привык держать
  руки правильно и однажды во время печати меня осенило, что я уже где
  то час печатаю по-русски и ни разу не поглядел на клавиатуру. Я стал
  придумывать слова, а мои пальцы сами их набирали. Причем, для того,
  что вспомнить где находится какая-то конкретная клавиша, мне
  приходилось подумать секунд 5, а текст набирался совершенно
  непринужденно - при условии, что я думал о тексте, а не о клавишах.

  Надеюсь, этот прием поможет и тебе, мой ленивый читатель.

** Что такое C-, M- и всё остальное.
** обязательно перебиндить капс-лок
** обязательно слепая печать
** обязательно переключать на шифт-шифт
* Как отредактировать файл
** dired (картинки)
** ido
** C-x C-s, C-x C-c, C-x k
** переключение языка
** перемещение (C-a, C-e, M->, M-<, C-M-n, C-M-p, M-g g)
** посимвольные операции (не забыть C-t)
** пословные операции (subword) (важно - что C-M-b, C-M-f бегают по скобкам)
** M-z
** Undo
** C-x C-o, M-\
** M-p, M-n
** M-c, M-u, M-l
** C-o, M-j
** выделение региона (С-x h)
** kill/yank, kill-ring
** Парные скобочки, удаление
** C-=
** C-s, C-r (не забыть, что можно выделить и нажать и оно его будет искать), M-s o, M-% (C-q C-j)
** C-v, M-v, C-l
** Контекстное авто-дополнение

* Работа с окошками
* Поиск
* Как поставить dmd
** M-&
** пишем программу - комментарии, M-q
** компилируем
** создаем репозиторий, смотрим в магит
** выкладываем на гитхаб
** Таги
* Пишем презентацию в орг-моде, в маркдауне (починить нумерованый список)
* Разное
** пользование документацией
** Редактирование под рутом
** grep, wgrep
** M-|
** редактирование в диред
** клавиатурные макросы
** несколько курсоров (rectangular regions)
** remote-term
** проверка правописания
** Выполнение лиспа
** Google, Lingvo
